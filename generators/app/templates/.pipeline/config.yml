---
general:
<% if(BTPRuntime === 'Kyma'){ -%>
  buildTool: "docker"
  dockerConfigJsonSecretTextCredentialsId: "docker"
  containerImageName: "<%= dockerID %>/<%= projectName %>-srv"
  containerImageTag: "latest"
  containerRegistryUrl: "https://index.docker.io"
steps:
  kanikoExecute:
    dockerfilePath: "srv/Dockerfile"
  kubernetesDeploy:
    kubeConfigSecretTextCredentialsId: "kyma"
    deployTool: "helm3"
    namespace: "<%= namespace %>"
    chartPath: "helm/<%= projectName %>-srv"
    deploymentName: "<%= projectName %>-srv"
    force: false
    helmValues:
    - "helm/<%= projectName %>-srv/values.yaml"
  tmsUpload:
    nodeName: "qa"
    credentialsId: "tms-sk"
stages:
  Build:
    kanikoExecute: true
  Release:
    kubernetesDeploy: true
    tmsUpload: false
<% } else { -%>
  buildTool: "mta"
stages:
  Build:
    mavenExecuteStaticCodeChecks: false
    npmExecuteLint: true
  Additional Unit Tests:
    npmExecuteScripts: false
    karmaExecuteTests: false
  Acceptance:
    cloudFoundryDeploy: false
    cfApiEndpoint: "<%= cfapi %>"
    cfOrg: "<%= cforg %>"
    cfSpace: "<%= cfspace %>"
    cfAppName: "<%= projectName %>"
    cfCredentialsId: "deploy-to-cf"
    uiVeri5ExecuteTests: false
  Release:
    cloudFoundryDeploy: true
    cfApiEndpoint: "<%= cfapi %>"
    cfOrg: "<%= cforg %>"
    cfSpace: "<%= cfspace %>"
    cfAppName: "<%= projectName %>"
    cfCredentialsId: "deploy-to-cf"
    tmsUpload: false
steps:
  artifactPrepareVersion:
    versioningType: "cloud_noTag"
  npmExecuteLint:
    failOnError: true
  cloudFoundryDeploy:
    mtaDeployParameters: "-f --version-rule ALL"
  tmsUpload:
    nodeName: "qa"
    credentialsId: "tms-sk"
<% } -%>